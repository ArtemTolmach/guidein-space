# Generated by Django 5.0 on 2024-06-07 15:58

import colorfield.fields
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Локация',
                'verbose_name_plural': 'Локации',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PhotoSphere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('image_path', models.ImageField(upload_to='', verbose_name='Путь к изображению')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_spheres', to='guidein_space.location', verbose_name='Локация')),
            ],
            options={
                'verbose_name': 'Фотосфера',
                'verbose_name_plural': 'Фотосферы',
            },
        ),
        migrations.CreateModel(
            name='MovePoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pitch', models.FloatField(verbose_name='Долгота')),
                ('yaw', models.FloatField(verbose_name='Широта')),
                ('photo_sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='move_points', to='guidein_space.photosphere', verbose_name='Фотосфера')),
                ('target_photo_sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_move_points', to='guidein_space.photosphere', verbose_name='Целевая фотосфера')),
            ],
            options={
                'verbose_name': 'Точка перемещения',
                'verbose_name_plural': 'Точки перемещения',
            },
        ),
        migrations.AddField(
            model_name='location',
            name='main_sphere',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='location_main_sphere', to='guidein_space.photosphere', verbose_name='Основная фотосфера'),
        ),
        migrations.CreateModel(
            name='InformationPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pitch', models.FloatField(verbose_name='Долгота')),
                ('yaw', models.FloatField(verbose_name='Широта')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Заголовок')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('photo_sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='info_points', to='guidein_space.photosphere', verbose_name='Фотосфера')),
            ],
            options={
                'verbose_name': 'Точка информации',
                'verbose_name_plural': 'Точки информации',
            },
        ),
        migrations.CreateModel(
            name='ImagePoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(upload_to='images/', verbose_name='Изображение')),
                ('coordinates', models.JSONField(verbose_name='Координаты точек изображения')),
                ('photo_sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='image_points', to='guidein_space.photosphere', verbose_name='Фотосфера')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='PolygonPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coordinates', models.JSONField(blank=True, default=list, verbose_name='Координаты точек полигона')),
                ('opacity', models.CharField(default='1', max_length=20, verbose_name='Прозрачность полигона')),
                ('fill', colorfield.fields.ColorField(default='rgba(255, 255, 255, 1)', image_field=None, max_length=25, samples=None, verbose_name='Цвет заливки')),
                ('stroke', colorfield.fields.ColorField(default='rgba(255, 255, 255, 1)', image_field=None, max_length=25, samples=None, verbose_name='Цвет границы')),
                ('stroke_width', models.IntegerField(blank=True, default=1, verbose_name='Ширина границы')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Заголовок')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('photo_sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polygon_points', to='guidein_space.photosphere', verbose_name='Фотосфера')),
            ],
            options={
                'verbose_name': 'Полигон',
                'verbose_name_plural': 'Полигоны',
            },
        ),
        migrations.CreateModel(
            name='PolyLinePoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('coordinates', models.JSONField(blank=True, default=list, verbose_name='Координаты точек линии')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='Заголовок')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Описание')),
                ('stroke', colorfield.fields.ColorField(default='rgba(255, 255, 255, 1)', image_field=None, max_length=25, samples=None, verbose_name='Цвет линии')),
                ('stroke_width', models.CharField(blank=True, default=1, max_length=20, verbose_name='Ширина линии')),
                ('stroke_linecap', models.CharField(blank=True, max_length=20, verbose_name='Cтиль концов линии')),
                ('stroke_linejoin', models.CharField(blank=True, max_length=20, verbose_name='Стиль соединения углов линии')),
                ('photo_sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='polyline_points', to='guidein_space.photosphere', verbose_name='Фотосфера')),
            ],
            options={
                'verbose_name': 'Линия',
                'verbose_name_plural': 'Линии',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('bio', models.CharField(blank=True, default='', max_length=1000, verbose_name='Био')),
                ('cover', models.ImageField(default='covers/default_cover.png', upload_to='covers/', verbose_name='Обложка')),
                ('main_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_main_location', to='guidein_space.location', verbose_name='Основная локация')),
            ],
            options={
                'verbose_name': 'Проект',
                'verbose_name_plural': 'Проекты',
            },
        ),
        migrations.AddField(
            model_name='location',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photo_spheres', to='guidein_space.project', verbose_name='Проект'),
        ),
        migrations.CreateModel(
            name='VideoPoint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('video', models.FileField(upload_to='videos/', verbose_name='Видео')),
                ('coordinates', models.JSONField(verbose_name='Координаты точек видео')),
                ('enable_chroma_key', models.BooleanField(default=False, verbose_name='Хромакей')),
                ('color_chroma_key', models.CharField(default='rgba(4, 244, 5, 1);', max_length=35, verbose_name='Цвет хромакея')),
                ('photo_sphere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='video_points', to='guidein_space.photosphere', verbose_name='Фотосфера')),
            ],
            options={
                'verbose_name': 'Видео',
                'verbose_name_plural': 'Видео',
            },
        ),
    ]
