/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/@photo-sphere-viewer/markers-plugin@5.7.2-fix.1/index.module.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*!
 * PhotoSphereViewer.MarkersPlugin 5.7.2.a
 * @copyright 2024 Damien "Mistic" Sorel
 * @licence MIT (https://opensource.org/licenses/MIT)
 */
var __defProp=Object.defineProperty,__export=(e,t)=>{for(var i in t)__defProp(e,i,{get:t[i],enumerable:!0})};import{DEFAULTS,registerButton}from"@photo-sphere-viewer/core";var events_exports={};__export(events_exports,{EnterMarkerEvent:()=>EnterMarkerEvent,GotoMarkerDoneEvent:()=>GotoMarkerDoneEvent,HideMarkersEvent:()=>HideMarkersEvent,LeaveMarkerEvent:()=>LeaveMarkerEvent,MarkerVisibilityEvent:()=>MarkerVisibilityEvent,MarkersPluginEvent:()=>MarkersPluginEvent,RenderMarkersListEvent:()=>RenderMarkersListEvent,SelectMarkerEvent:()=>SelectMarkerEvent,SelectMarkerListEvent:()=>SelectMarkerListEvent,SetMarkersEvent:()=>SetMarkersEvent,ShowMarkersEvent:()=>ShowMarkersEvent,UnselectMarkerEvent:()=>UnselectMarkerEvent});import{TypedEvent}from"@photo-sphere-viewer/core";var MarkersPluginEvent=class extends TypedEvent{},_MarkerVisibilityEvent=class e extends MarkersPluginEvent{constructor(t,i){super(e.type),this.marker=t,this.visible=i}};_MarkerVisibilityEvent.type="marker-visibility";var MarkerVisibilityEvent=_MarkerVisibilityEvent,_GotoMarkerDoneEvent=class e extends MarkersPluginEvent{constructor(t){super(e.type),this.marker=t}};_GotoMarkerDoneEvent.type="goto-marker-done";var GotoMarkerDoneEvent=_GotoMarkerDoneEvent,_LeaveMarkerEvent=class e extends MarkersPluginEvent{constructor(t){super(e.type),this.marker=t}};_LeaveMarkerEvent.type="leave-marker";var LeaveMarkerEvent=_LeaveMarkerEvent,_EnterMarkerEvent=class e extends MarkersPluginEvent{constructor(t){super(e.type),this.marker=t}};_EnterMarkerEvent.type="enter-marker";var EnterMarkerEvent=_EnterMarkerEvent,_SelectMarkerEvent=class e extends MarkersPluginEvent{constructor(t,i,s){super(e.type),this.marker=t,this.doubleClick=i,this.rightClick=s}};_SelectMarkerEvent.type="select-marker";var SelectMarkerEvent=_SelectMarkerEvent,_SelectMarkerListEvent=class e extends MarkersPluginEvent{constructor(t){super(e.type),this.marker=t}};_SelectMarkerListEvent.type="select-marker-list";var SelectMarkerListEvent=_SelectMarkerListEvent,_UnselectMarkerEvent=class e extends MarkersPluginEvent{constructor(t){super(e.type),this.marker=t}};_UnselectMarkerEvent.type="unselect-marker";var UnselectMarkerEvent=_UnselectMarkerEvent,_HideMarkersEvent=class e extends MarkersPluginEvent{constructor(){super(e.type)}};_HideMarkersEvent.type="hide-markers";var HideMarkersEvent=_HideMarkersEvent,_SetMarkersEvent=class e extends MarkersPluginEvent{constructor(t){super(e.type),this.markers=t}};_SetMarkersEvent.type="set-markers";var SetMarkersEvent=_SetMarkersEvent,_ShowMarkersEvent=class e extends MarkersPluginEvent{constructor(){super(e.type)}};_ShowMarkersEvent.type="show-markers";var ShowMarkersEvent=_ShowMarkersEvent,_RenderMarkersListEvent=class e extends MarkersPluginEvent{constructor(t){super(e.type),this.markers=t}};_RenderMarkersListEvent.type="render-markers-list";var RenderMarkersListEvent=_RenderMarkersListEvent;import{AbstractButton}from"@photo-sphere-viewer/core";var pin_default='<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 9 81 81"><path fill="currentColor" d="M50.5 90S22.9 51.9 22.9 36.6 35.2 9 50.5 9s27.6 12.4 27.6 27.6S50.5 90 50.5 90zm0-66.3c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11z"/>\x3c!--Created by Rohith M S from the Noun Project--\x3e</svg>\n',MarkersButton=class extends AbstractButton{constructor(e){super(e,{className:"psv-markers-button",icon:pin_default,hoverScale:!0,collapsable:!0,tabbable:!0}),this.plugin=this.viewer.getPlugin("markers"),this.plugin&&(this.plugin.addEventListener(ShowMarkersEvent.type,this),this.plugin.addEventListener(HideMarkersEvent.type,this),this.toggleActive(!0))}destroy(){this.plugin&&(this.plugin.removeEventListener(ShowMarkersEvent.type,this),this.plugin.removeEventListener(HideMarkersEvent.type,this)),super.destroy()}isSupported(){return!!this.plugin}handleEvent(e){e instanceof ShowMarkersEvent?this.toggleActive(!0):e instanceof HideMarkersEvent&&this.toggleActive(!1)}onClick(){this.plugin.toggleAllMarkers()}};MarkersButton.id="markers";import{AbstractButton as AbstractButton2,events}from"@photo-sphere-viewer/core";import{utils}from"@photo-sphere-viewer/core";var pin_list_default='<svg xmlns="http://www.w3.org/2000/svg" viewBox="9 9 81 81"><path fill="currentColor" d="M37.5 90S9.9 51.9 9.9 36.6 22.2 9 37.5 9s27.6 12.4 27.6 27.6S37.5 90 37.5 90zm0-66.3c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11zM86.7 55H70c-1.8 0-3.3-1.5-3.3-3.3s1.5-3.3 3.3-3.3h16.7c1.8 0 3.3 1.5 3.3 3.3S88.5 55 86.7 55zm0-25h-15a3.3 3.3 0 0 1-3.3-3.3c0-1.8 1.5-3.3 3.3-3.3h15c1.8 0 3.3 1.5 3.3 3.3 0 1.8-1.5 3.3-3.3 3.3zM56.5 73h30c1.8 0 3.3 1.5 3.3 3.3 0 1.8-1.5 3.3-3.3 3.3h-30a3.3 3.3 0 0 1-3.3-3.3 3.2 3.2 0 0 1 3.3-3.3z"/>\x3c!--Created by Rohith M S from the Noun Project--\x3e</svg>\n',SVG_NS="http://www.w3.org/2000/svg",MARKER_DATA="psvMarker",MARKER_DATA_KEY=utils.dasherize(MARKER_DATA),ID_PANEL_MARKER="marker",ID_PANEL_MARKERS_LIST="markersList",DEFAULT_HOVER_SCALE={amount:2,duration:100,easing:"linear"},MARKERS_LIST_TEMPLATE=(e,t)=>`\n<div class="psv-panel-menu psv-panel-menu--stripped">\n <h1 class="psv-panel-menu-title">${pin_list_default} ${t}</h1>\n <ul class="psv-panel-menu-list">\n   ${e.map((e=>`\n   <li data-${MARKER_DATA_KEY}="${e.id}" class="psv-panel-menu-item" tabindex="0">\n     ${"image"===e.type?`<span class="psv-panel-menu-item-icon"><img src="${e.definition}"/></span>`:""}\n     <span class="psv-panel-menu-item-label">${e.getListContent()}</span>\n   </li>\n   `)).join("")}\n </ul>\n</div>\n`,MarkersListButton=class extends AbstractButton2{constructor(e){super(e,{className:" psv-markers-list-button",icon:pin_list_default,hoverScale:!0,collapsable:!0,tabbable:!0}),this.plugin=this.viewer.getPlugin("markers"),this.plugin&&(this.viewer.addEventListener(events.ShowPanelEvent.type,this),this.viewer.addEventListener(events.HidePanelEvent.type,this))}destroy(){this.viewer.removeEventListener(events.ShowPanelEvent.type,this),this.viewer.removeEventListener(events.HidePanelEvent.type,this),super.destroy()}isSupported(){return!!this.plugin}handleEvent(e){e instanceof events.ShowPanelEvent?this.toggleActive(e.panelId===ID_PANEL_MARKERS_LIST):e instanceof events.HidePanelEvent&&this.toggleActive(!1)}onClick(){this.plugin.toggleMarkersList()}};MarkersListButton.id="markersList";import{AbstractConfigurablePlugin,PSVError as PSVError6,events as events2,utils as utils10}from"@photo-sphere-viewer/core";import{CONSTANTS,utils as utils4}from"@photo-sphere-viewer/core";import{MathUtils}from"three";import{PSVError}from"@photo-sphere-viewer/core";var MarkerType=(e=>(e.image="image",e.html="html",e.element="element",e.imageLayer="imageLayer",e.videoLayer="videoLayer",e.polygon="polygon",e.polygonPixels="polygonPixels",e.polyline="polyline",e.polylinePixels="polylinePixels",e.square="square",e.rect="rect",e.circle="circle",e.ellipse="ellipse",e.path="path",e))(MarkerType||{});function getMarkerType(e,t=!1){const i=[];if(Object.keys(MarkerType).forEach((t=>{e[t]&&i.push(t)})),0===i.length&&!t)throw new PSVError(`missing marker content, either ${Object.keys(MarkerType).join(", ")}`);if(i.length>1)throw new PSVError(`multiple marker content, either ${Object.keys(MarkerType).join(", ")}`);return i[0]}import{utils as utils3}from"@photo-sphere-viewer/core";import{PSVError as PSVError2,utils as utils2}from"@photo-sphere-viewer/core";var Marker=class{constructor(e,t,i){if(this.viewer=e,this.plugin=t,this.state={dynamicSize:!1,anchor:null,visible:!1,staticTooltip:!1,position:null,position2D:null,positions3D:null,size:null},!i.id)throw new PSVError2("missing marker id");this.type=getMarkerType(i),this.createElement(),this.update(i)}get id(){return this.config.id}get data(){return this.config.data}get domElement(){return null}get threeElement(){return null}get video(){return null}destroy(){delete this.viewer,delete this.plugin,this.hideTooltip()}is3d(){return!1}isNormal(){return!1}isPoly(){return!1}isSvg(){return!1}update(e){const t=getMarkerType(e,!0);if(void 0!==t&&t!==this.type)throw new PSVError2("cannot change marker type");if(utils2.isExtendedPosition(e)&&(utils2.logWarn('Use the "position" property to configure the position of a marker'),e.position=this.viewer.dataHelper.cleanPosition(e)),"width"in e&&"height"in e&&(utils2.logWarn('Use the "size" property to configure the size of a marker'),e.size={width:e.width,height:e.height}),this.config=utils2.deepmerge(this.config,e),"string"==typeof this.config.tooltip&&(this.config.tooltip={content:this.config.tooltip}),this.config.tooltip&&!this.config.tooltip.trigger&&(this.config.tooltip.trigger="hover"),utils2.isNil(this.config.visible)&&(this.config.visible=!0),utils2.isNil(this.config.zIndex)&&(this.config.zIndex=1),utils2.isNil(this.config.opacity)&&(this.config.opacity=1),this.config.rotation=0,!utils2.isNil(e.rotation))try{this.config.rotation=utils2.parseAngle(e.rotation)}catch(e){utils2.logWarn(e.message)}this.state.anchor=utils2.parsePoint(this.config.anchor)}getListContent(){return this.config.listContent?this.config.listContent:this.config.tooltip?.content?this.config.tooltip.content:this.config.html?this.config.html:this.id}showTooltip(e,t){if(this.state.visible&&this.config.tooltip?.content&&this.state.position2D){const i={...this.config.tooltip,style:{pointerEvents:this.state.staticTooltip?"auto":"none"},data:this,top:0,left:0};if(this.isPoly()||this.is3d())if(e||t){const s=utils2.getPosition(this.viewer.container);i.top=t-s.y,i.left=e-s.x,i.box={width:20,height:20}}else i.top=this.state.position2D.y,i.left=this.state.position2D.x;else{const e=this.viewer.dataHelper.vector3ToViewerCoords(this.state.positions3D[0]);let t=this.state.size.width,s=this.state.size.height;this.config.hoverScale&&!this.state.staticTooltip&&(t*=this.config.hoverScale.amount,s*=this.config.hoverScale.amount),i.top=e.y-s*this.state.anchor.y+s/2,i.left=e.x-t*this.state.anchor.x+t/2,i.box={width:t,height:s}}this.tooltip?this.tooltip.update(this.config.tooltip.content,i):this.tooltip=this.viewer.createTooltip(i)}}hideTooltip(){this.tooltip&&(this.tooltip.hide(),this.tooltip=null)}},AbstractDomMarker=class extends Marker{get domElement(){return this.element}constructor(e,t,i){super(e,t,i)}destroy(){delete this.element[MARKER_DATA],super.destroy()}update(e){super.update(e);const t=this.domElement;t.id=`psv-marker-${this.config.id}`,t.setAttribute("class","psv-marker"),this.state.visible&&t.classList.add("psv-marker--visible"),this.config.tooltip&&t.classList.add("psv-marker--has-tooltip"),this.config.content&&t.classList.add("psv-marker--has-content"),this.config.className&&utils3.addClasses(t,this.config.className),t.style.opacity=`${this.config.opacity}`,t.style.zIndex=`${30+this.config.zIndex}`,this.config.style&&Object.assign(t.style,this.config.style)}},AbstractStandardMarker=class extends AbstractDomMarker{constructor(e,t,i){super(e,t,i)}createElement(){this.element[MARKER_DATA]=this,this.domElement.addEventListener("transitionend",(()=>{this.domElement.style.transition=""}))}render({viewerPosition:e,zoomLevel:t,hoveringMarker:i}){this.__updateSize();const s=this.viewer.dataHelper.vector3ToViewerCoords(this.state.positions3D[0]);s.x-=this.state.size.width*this.state.anchor.x,s.y-=this.state.size.height*this.state.anchor.y;return this.state.positions3D[0].dot(this.viewer.state.direction)>0&&s.x+this.state.size.width>=0&&s.x-this.state.size.width<=this.viewer.state.size.width&&s.y+this.state.size.height>=0&&s.y-this.state.size.height<=this.viewer.state.size.height?(this.domElement.style.translate=`${s.x}px ${s.y}px 0px`,this.applyScale({zoomLevel:t,viewerPosition:e,mouseover:this===i}),"element"===this.type&&this.config.element.updateMarker?.({marker:this,position:s,viewerPosition:e,zoomLevel:t,viewerSize:this.viewer.state.size}),s):null}update(e){super.update(e);const t=this.domElement;t.classList.add("psv-marker--normal"),this.config.scale&&Array.isArray(this.config.scale)&&(this.config.scale={zoom:this.config.scale}),"boolean"==typeof this.config.hoverScale?this.config.hoverScale=this.config.hoverScale?this.plugin.config.defaultHoverScale||DEFAULT_HOVER_SCALE:null:"number"==typeof this.config.hoverScale?this.config.hoverScale={amount:this.config.hoverScale}:this.config.hoverScale||(this.config.hoverScale=this.plugin.config.defaultHoverScale),this.config.hoverScale&&(this.config.hoverScale={...DEFAULT_HOVER_SCALE,...this.plugin.config.defaultHoverScale,...this.config.hoverScale}),t.style.rotate=0!==this.config.rotation?MathUtils.radToDeg(this.config.rotation)+"deg":null}__updateSize(){if(!this.state.dynamicSize)return;const e=this.domElement,t=!this.state.size;if(t&&e.classList.add("psv-marker--transparent"),this.isSvg()){const t=e.firstElementChild.getBoundingClientRect();this.state.size={width:t.width,height:t.height}}else this.isNormal()&&(this.state.size={width:e.offsetWidth,height:e.offsetHeight});t&&e.classList.remove("psv-marker--transparent"),this.isSvg()&&(e.style.width=this.state.size.width+"px",e.style.height=this.state.size.height+"px"),"element"!==this.type&&(this.state.dynamicSize=!1)}applyScale({zoomLevel:e,viewerPosition:t,mouseover:i}){null!==i&&this.config.hoverScale&&(this.domElement.style.transition=`scale ${this.config.hoverScale.duration}ms ${this.config.hoverScale.easing}`);let s=1;if("function"==typeof this.config.scale)s=this.config.scale(e,t);else if(this.config.scale){if(Array.isArray(this.config.scale.zoom)){const[t,i]=this.config.scale.zoom;s*=t+(i-t)*CONSTANTS.EASINGS.inQuad(e/100)}if(Array.isArray(this.config.scale.yaw)){const[e,i]=this.config.scale.yaw,r=MathUtils.degToRad(this.viewer.state.hFov)/2,o=Math.abs(utils4.getShortestArc(this.state.position.yaw,t.yaw));s*=i+(e-i)*CONSTANTS.EASINGS.outQuad(Math.max(0,(r-o)/r))}}i&&this.config.hoverScale&&(s*=this.config.hoverScale.amount),this.domElement.style.scale=`${s}`}};import{PSVError as PSVError3,utils as utils5}from"@photo-sphere-viewer/core";var MarkerNormal=class extends AbstractStandardMarker{constructor(e,t,i){super(e,t,i)}isNormal(){return!0}createElement(){this.element=document.createElement("div"),super.createElement()}update(e){super.update(e);const t=this.domElement;if(!utils5.isExtendedPosition(this.config.position))throw new PSVError3("missing marker position");if(this.config.image&&!this.config.size)throw new PSVError3("missing marker size");switch(this.config.size?(this.state.dynamicSize=!1,this.state.size=this.config.size,t.style.width=this.config.size.width+"px",t.style.height=this.config.size.height+"px"):this.state.dynamicSize=!0,this.type){case"image":this.definition=this.config.image,t.style.backgroundImage=`url("${this.config.image}")`;break;case"html":this.definition=this.config.html,t.innerHTML=this.config.html;break;case"element":this.definition!==this.config.element&&(this.definition=this.config.element,t.childNodes.forEach((e=>e.remove())),t.appendChild(this.config.element),this.config.element.style.display="block")}t.style.transformOrigin=`${100*this.state.anchor.x}% ${100*this.state.anchor.y}%`,this.state.position=this.viewer.dataHelper.cleanPosition(this.config.position),this.state.positions3D=[this.viewer.dataHelper.sphericalCoordsToVector3(this.state.position)]}};import{PSVError as PSVError4,utils as utils7}from"@photo-sphere-viewer/core";import{Group,Mesh,PlaneGeometry,Texture as Texture2,Vector3 as Vector32,VideoTexture}from"three";import{Color,ShaderMaterial,Vector2}from"three";var chromaKey_fragment_default="// https://www.8thwall.com/playground/chromakey-threejs\n\nuniform sampler2D map;\nuniform float alpha;\nuniform bool keying;\nuniform vec3 color;\nuniform float similarity;\nuniform float smoothness;\nuniform float spill;\n\nvarying vec2 vUv;\n\nvec2 RGBtoUV(vec3 rgb) {\n    return vec2(\n        rgb.r * -0.169 + rgb.g * -0.331 + rgb.b *  0.5    + 0.5,\n        rgb.r *  0.5   + rgb.g * -0.419 + rgb.b * -0.081  + 0.5\n    );\n}\n\nvoid main(void) {\n    gl_FragColor = texture2D(map, vUv);\n\n    if (keying) {\n        float chromaDist = distance(RGBtoUV(gl_FragColor.rgb), RGBtoUV(color));\n\n        float baseMask = chromaDist - similarity;\n        float fullMask = pow(clamp(baseMask / smoothness, 0., 1.), 1.5);\n        gl_FragColor.a *= fullMask * alpha;\n\n        float spillVal = pow(clamp(baseMask / spill, 0., 1.), 1.5);\n        float desat = clamp(gl_FragColor.r * 0.2126 + gl_FragColor.g * 0.7152 + gl_FragColor.b * 0.0722, 0., 1.);\n        gl_FragColor.rgb = mix(vec3(desat, desat, desat), gl_FragColor.rgb, spillVal);\n    } else {\n        gl_FragColor.a *= alpha;\n    }\n}\n",chromaKey_vertex_default="varying vec2 vUv;\nuniform vec2 repeat;\nuniform vec2 offset;\n\nvoid main() {\n    vUv = uv * repeat + offset;\n    gl_Position = projectionMatrix *  modelViewMatrix * vec4( position, 1.0 );\n}\n",ChromaKeyMaterial=class extends ShaderMaterial{constructor(e){super({transparent:!0,depthTest:!1,uniforms:{map:{value:e?.map},repeat:{value:new Vector2(1,1)},offset:{value:new Vector2(0,0)},alpha:{value:e?.alpha??1},keying:{value:!1},color:{value:new Color(65280)},similarity:{value:.2},smoothness:{value:.2},spill:{value:.1}},vertexShader:chromaKey_vertex_default,fragmentShader:chromaKey_fragment_default}),this.chromaKey=e?.chromaKey}get map(){return this.uniforms.map.value}set map(e){this.uniforms.map.value=e}set alpha(e){this.uniforms.alpha.value=e}get offset(){return this.uniforms.offset.value}get repeat(){return this.uniforms.repeat.value}set chromaKey(e){this.uniforms.keying.value=!0===e?.enabled,e?.enabled&&("object"==typeof e.color&&"r"in e.color?this.uniforms.color.value.set(e.color.r/255,e.color.g/255,e.color.b/255):this.uniforms.color.value.set(e.color??65280),this.uniforms.similarity.value=e.similarity??.2,this.uniforms.smoothness.value=e.smoothness??.2)}};function createVideo({src:e,withCredentials:t,muted:i,autoplay:s}){const r=document.createElement("video");return r.crossOrigin=t?"use-credentials":"anonymous",r.loop=!0,r.playsInline=!0,r.autoplay=s,r.muted=i,r.preload="metadata",r.src=e,r}import{CONSTANTS as CONSTANTS2,utils as utils6}from"@photo-sphere-viewer/core";import{Vector3}from"three";function greatArcIntermediaryPoint(e,t,i){const[s,r]=e,[o,n]=t,a=utils6.greatArcDistance(e,t),h=Math.sin((1-i)*a)/Math.sin(a),l=Math.sin(i*a)/Math.sin(a),c=h*Math.cos(r)*Math.cos(s)+l*Math.cos(n)*Math.cos(o),p=h*Math.cos(r)*Math.sin(s)+l*Math.cos(n)*Math.sin(o),v=h*Math.sin(r)+l*Math.sin(n);return[Math.atan2(p,c),Math.atan2(v,Math.sqrt(c*c+p*p))]}function getPolygonCoherentPoints(e){const t=[e[0]];let i=0;for(let s=1;s<e.length;s++){const r=e[s-1][0]-e[s][0];r>Math.PI?i+=1:r<-Math.PI&&(i-=1),t.push([e[s][0]+2*i*Math.PI,e[s][1]])}return t}function getPolygonCenter(e){const t=getPolygonCoherentPoints(e).reduce(((e,t)=>[e[0]+t[0],e[1]+t[1]]));return[utils6.parseAngle(t[0]/e.length),t[1]/e.length]}function getPolylineCenter(e){const t=getPolygonCoherentPoints(e);let i=0;const s=[];for(let e=0;e<t.length-1;e++){const r=utils6.greatArcDistance(t[e],t[e+1])*CONSTANTS2.SPHERE_RADIUS;s.push(r),i+=r}let r=0;for(let e=0;e<t.length-1;e++){if(r+s[e]>i/2){const o=(i/2-r)/s[e];return greatArcIntermediaryPoint(t[e],t[e+1],o)}r+=s[e]}return t[Math.round(t.length/2)]}var C=new Vector3,N=new Vector3,V=new Vector3,X=new Vector3,Y=new Vector3,A=new Vector3;function getGreatCircleIntersection(e,t,i){C.copy(i).normalize(),N.crossVectors(e,t).normalize(),V.crossVectors(N,e).normalize(),X.copy(e).multiplyScalar(-C.dot(V)),Y.copy(V).multiplyScalar(C.dot(e));const s=(new Vector3).addVectors(X,Y).normalize();return A.crossVectors(s,C),s.applyAxisAngle(A,.01).multiplyScalar(CONSTANTS2.SPHERE_RADIUS)}var Marker3D=class extends Marker{get threeElement(){return this.element}get threeMesh(){return this.threeElement.children[0]}get video(){return"videoLayer"===this.type?this.threeMesh.material.map.image:null}constructor(e,t,i){super(e,t,i)}is3d(){return!0}createElement(){const e=new ChromaKeyMaterial({alpha:0}),t=new PlaneGeometry(1,1),i=new Mesh(t,e);i.userData={[MARKER_DATA]:this},Object.defineProperty(i,"visible",{enumerable:!0,get:function(){return this.userData[MARKER_DATA].state.visible},set:function(e){this.userData[MARKER_DATA].state.visible=e}}),this.element=(new Group).add(i),"videoLayer"===this.type&&this.viewer.needsContinuousUpdate(!0)}destroy(){delete this.threeMesh.userData[MARKER_DATA],"videoLayer"===this.type&&(this.video.pause(),this.viewer.needsContinuousUpdate(!1)),super.destroy()}render(){return this.viewer.renderer.isObjectVisible(this.threeMesh)?this.viewer.dataHelper.sphericalCoordsToViewerCoords(this.state.position):null}update(e){super.update(e);const t=this.threeMesh,i=t.parent,s=t.material;if(this.state.dynamicSize=!1,utils7.isExtendedPosition(this.config.position)){if(!this.config.size)throw new PSVError4("missing marker size");switch(this.state.position=this.viewer.dataHelper.cleanPosition(this.config.position),this.state.size=this.config.size,t.scale.set(this.config.size.width/100,this.config.size.height/100,1),t.position.set(t.scale.x*(.5-this.state.anchor.x),t.scale.y*(this.state.anchor.y-.5),0),t.rotation.set(0,0,-this.config.rotation),this.viewer.dataHelper.sphericalCoordsToVector3(this.state.position,i.position),i.lookAt(0,i.position.y,0),this.config.orientation){case"horizontal":i.rotateX(this.state.position.pitch<0?-Math.PI/2:Math.PI/2);break;case"vertical-left":i.rotateY(.4*-Math.PI);break;case"vertical-right":i.rotateY(.4*Math.PI)}const e=t.geometry.getAttribute("position");this.state.positions3D=[0,1,3,2].map((i=>{const s=new Vector32;return s.fromBufferAttribute(e,i),t.localToWorld(s)}))}else{if(4!==this.config.position?.length)throw new PSVError4("missing marker position");const e=this.config.position.map((e=>this.viewer.dataHelper.cleanPosition(e))),i=e.map((e=>this.viewer.dataHelper.sphericalCoordsToVector3(e))),r=getPolygonCenter(e.map((({yaw:e,pitch:t})=>[e,t])));this.state.position={yaw:r[0],pitch:r[1]},this.state.positions3D=i;const o=t.geometry.getAttribute("position");[i[0],i[1],i[3],i[2]].forEach(((e,t)=>{o.setX(t,e.x),o.setY(t,e.y),o.setZ(t,e.z)})),o.needsUpdate=!0,this.__setTextureWrap(s)}switch(this.type){case"videoLayer":if(this.definition!==this.config.videoLayer){s.map?.dispose();const e=createVideo({src:this.config.videoLayer,withCredentials:this.viewer.config.withCredentials,muted:!0,autoplay:!0}),i=new VideoTexture(e);s.map=i,s.alpha=0,e.addEventListener("loadedmetadata",(()=>{this.viewer&&(s.alpha=this.config.opacity,utils7.isExtendedPosition(this.config.position)||(t.material.userData[MARKER_DATA]={width:e.videoWidth,height:e.videoHeight},this.__setTextureWrap(s)))}),{once:!0}),e.play(),this.definition=this.config.videoLayer}else s.alpha=this.config.opacity;break;case"imageLayer":if(this.definition!==this.config.imageLayer){s.map?.dispose();const e=new Texture2;s.map=e,s.alpha=0,this.viewer.textureLoader.loadImage(this.config.imageLayer).then((i=>{this.viewer&&(utils7.isExtendedPosition(this.config.position)||(t.material.userData[MARKER_DATA]={width:i.width,height:i.height},this.__setTextureWrap(s)),e.image=i,e.anisotropy=4,e.needsUpdate=!0,s.alpha=this.config.opacity,this.viewer.needsUpdate())})),this.definition=this.config.imageLayer}else s.alpha=this.config.opacity}s.chromaKey=this.config.chromaKey,t.renderOrder=1e3+this.config.zIndex,t.geometry.boundingBox=null}__setTextureWrap(e){const t=e.userData[MARKER_DATA];if(!t||!t.height||!t.width)return e.repeat.set(1,1),void e.offset.set(0,0);const i=this.config.position.map((e=>this.viewer.dataHelper.cleanPosition(e))),s=(utils7.greatArcDistance([i[0].yaw,i[0].pitch],[i[1].yaw,i[1].pitch])+utils7.greatArcDistance([i[3].yaw,i[3].pitch],[i[2].yaw,i[2].pitch]))/(utils7.greatArcDistance([i[1].yaw,i[1].pitch],[i[2].yaw,i[2].pitch])+utils7.greatArcDistance([i[0].yaw,i[0].pitch],[i[3].yaw,i[3].pitch])),r=t.width/t.height;let o=0,n=0;s<r?o=r-s:n=1/r-1/s,e.repeat.set(1-o,1-n),e.offset.set(o/2,n/2)}};import{utils as utils8}from"@photo-sphere-viewer/core";var MarkerPolygon=class extends AbstractDomMarker{constructor(e,t,i){super(e,t,i)}createElement(){this.element=document.createElementNS(SVG_NS,this.isPolygon?"polygon":"polyline"),this.element[MARKER_DATA]=this}isPoly(){return!0}get isPixels(){return"polygonPixels"===this.type||"polylinePixels"===this.type}get isPolygon(){return"polygon"===this.type||"polygonPixels"===this.type}get isPolyline(){return"polyline"===this.type||"polylinePixels"===this.type}render(){const e=this.__getPolyPositions();if(e.length>(this.isPolygon?2:1)){const t=this.viewer.dataHelper.sphericalCoordsToViewerCoords(this.state.position),i=e.map((e=>e.x-t.x+","+(e.y-t.y))).join(" ");return this.domElement.setAttributeNS(null,"points",i),this.domElement.setAttributeNS(null,"transform",`translate(${t.x} ${t.y})`),t}return null}update(e){super.update(e);const t=this.domElement;t.classList.add("psv-marker--poly"),this.state.dynamicSize=!0,this.config.svgStyle?(Object.entries(this.config.svgStyle).forEach((([e,i])=>{t.setAttributeNS(null,utils8.dasherize(e),i)})),this.isPolyline&&!this.config.svgStyle.fill&&t.setAttributeNS(null,"fill","none")):this.isPolygon?t.setAttributeNS(null,"fill","rgba(0,0,0,0.5)"):this.isPolyline&&(t.setAttributeNS(null,"fill","none"),t.setAttributeNS(null,"stroke","rgb(0,0,0)"));const i=this.config[this.type];if(!Array.isArray(i[0]))for(let e=0;e<i.length;e++)i.splice(e,2,[i[e],i[e+1]]);this.isPixels?this.definition=i.map((e=>{const t=this.viewer.dataHelper.textureCoordsToSphericalCoords({textureX:e[0],textureY:e[1]});return[t.yaw,t.pitch]})):this.definition=i.map((e=>[utils8.parseAngle(e[0]),utils8.parseAngle(e[1],!0)]));const s=this.isPolygon?getPolygonCenter(this.definition):getPolylineCenter(this.definition);this.state.position={yaw:s[0],pitch:s[1]},this.state.positions3D=this.definition.map((e=>this.viewer.dataHelper.sphericalCoordsToVector3({yaw:e[0],pitch:e[1]})))}__getPolyPositions(){const e=this.state.positions3D.length,t=this.state.positions3D.map((e=>({vector:e,visible:e.dot(this.viewer.state.direction)>0}))),i=[];return t.forEach(((s,r)=>{if(!s.visible){[0===r?t[e-1]:t[r-1],r===e-1?t[0]:t[r+1]].forEach((e=>{e.visible&&i.push({visible:e.vector,invisible:s.vector,index:r})}))}})),i.reverse().forEach((e=>{t.splice(e.index,0,{vector:getGreatCircleIntersection(e.visible,e.invisible,this.viewer.state.direction),visible:!0})})),t.filter((e=>e.visible)).map((e=>this.viewer.dataHelper.vector3ToViewerCoords(e.vector)))}};import{PSVError as PSVError5,utils as utils9}from"@photo-sphere-viewer/core";var MarkerSvg=class extends AbstractStandardMarker{constructor(e,t,i){super(e,t,i)}isSvg(){return!0}createElement(){const e="square"===this.type?"rect":this.type,t=document.createElementNS(SVG_NS,e);this.element=document.createElementNS(SVG_NS,"svg"),this.element.appendChild(t),super.createElement()}update(e){super.update(e);const t=this.domElement.firstElementChild;if(!utils9.isExtendedPosition(this.config.position))throw new PSVError5("missing marker position");switch(this.state.dynamicSize=!0,this.type){case"square":this.definition={x:0,y:0,width:this.config.square,height:this.config.square};break;case"rect":Array.isArray(this.config.rect)?this.definition={x:0,y:0,width:this.config.rect[0],height:this.config.rect[1]}:this.definition={x:0,y:0,width:this.config.rect.width,height:this.config.rect.height};break;case"circle":this.definition={cx:this.config.circle,cy:this.config.circle,r:this.config.circle};break;case"ellipse":Array.isArray(this.config.ellipse)?this.definition={cx:this.config.ellipse[0],cy:this.config.ellipse[1],rx:this.config.ellipse[0],ry:this.config.ellipse[1]}:this.definition={cx:this.config.ellipse.rx,cy:this.config.ellipse.ry,rx:this.config.ellipse.rx,ry:this.config.ellipse.ry};break;case"path":this.definition={d:this.config.path}}Object.entries(this.definition).forEach((([e,i])=>{t.setAttributeNS(null,e,i)})),this.config.svgStyle?Object.entries(this.config.svgStyle).forEach((([e,i])=>{t.setAttributeNS(null,utils9.dasherize(e),i)})):t.setAttributeNS(null,"fill","rgba(0,0,0,0.5)"),this.domElement.style.transformOrigin=`${100*this.state.anchor.x}% ${100*this.state.anchor.y}%`,this.state.position=this.viewer.dataHelper.cleanPosition(this.config.position),this.state.positions3D=[this.viewer.dataHelper.sphericalCoordsToVector3(this.state.position)]}},getConfig=utils10.getConfigParser({clickEventOnMarker:!1,gotoMarkerSpeed:"8rpm",markers:null,defaultHoverScale:null},{defaultHoverScale:e=>e?(!0===e&&(e=DEFAULT_HOVER_SCALE),"number"==typeof e&&(e={amount:e}),{...DEFAULT_HOVER_SCALE,...e}):null});function getMarkerCtor(e){switch(getMarkerType(e,!1)){case"image":case"html":case"element":return MarkerNormal;case"imageLayer":case"videoLayer":return Marker3D;case"polygon":case"polyline":case"polygonPixels":case"polylinePixels":return MarkerPolygon;case"square":case"rect":case"circle":case"ellipse":case"path":return MarkerSvg;default:throw new PSVError6("invalid marker type")}}var MarkersPlugin=class extends AbstractConfigurablePlugin{constructor(e,t){super(e,t),this.markers={},this.state={visible:!0,showAllTooltips:!1,currentMarker:null,hoveringMarker:null,needsReRender:!1},this.container=document.createElement("div"),this.container.className="psv-markers",this.viewer.container.appendChild(this.container),this.svgContainer=document.createElementNS(SVG_NS,"svg"),this.svgContainer.setAttribute("class","psv-markers-svg-container"),this.container.appendChild(this.svgContainer),this.container.addEventListener("mouseenter",this,!0),this.container.addEventListener("mouseleave",this,!0),this.container.addEventListener("mousemove",this,!0),this.container.addEventListener("contextmenu",this)}init(){super.init(),utils10.checkStylesheet(this.viewer.container,"markers-plugin"),this.viewer.addEventListener(events2.ClickEvent.type,this),this.viewer.addEventListener(events2.DoubleClickEvent.type,this),this.viewer.addEventListener(events2.RenderEvent.type,this),this.viewer.addEventListener(events2.ConfigChangedEvent.type,this),this.viewer.addEventListener(events2.ObjectEnterEvent.type,this),this.viewer.addEventListener(events2.ObjectHoverEvent.type,this),this.viewer.addEventListener(events2.ObjectLeaveEvent.type,this),this.viewer.addEventListener(events2.ReadyEvent.type,this,{once:!0})}destroy(){this.clearMarkers(!1),this.viewer.unobserveObjects(MARKER_DATA),this.viewer.removeEventListener(events2.ClickEvent.type,this),this.viewer.removeEventListener(events2.DoubleClickEvent.type,this),this.viewer.removeEventListener(events2.RenderEvent.type,this),this.viewer.removeEventListener(events2.ObjectEnterEvent.type,this),this.viewer.removeEventListener(events2.ObjectHoverEvent.type,this),this.viewer.removeEventListener(events2.ObjectLeaveEvent.type,this),this.viewer.removeEventListener(events2.ReadyEvent.type,this),this.viewer.container.removeChild(this.container),super.destroy()}handleEvent(e){switch(e.type){case events2.ReadyEvent.type:this.config.markers&&(this.setMarkers(this.config.markers),delete this.config.markers);break;case events2.RenderEvent.type:this.renderMarkers();break;case events2.ClickEvent.type:this.__onClick(e,!1);break;case events2.DoubleClickEvent.type:this.__onClick(e,!0);break;case events2.ObjectEnterEvent.type:case events2.ObjectLeaveEvent.type:case events2.ObjectHoverEvent.type:if(e.userDataKey===MARKER_DATA){const t=e.originalEvent,i=e.object.userData[MARKER_DATA];switch(e.type){case events2.ObjectEnterEvent.type:i.config.style?.cursor?this.viewer.setCursor(i.config.style.cursor):(i.config.tooltip||i.config.content)&&this.viewer.setCursor("pointer"),this.__onEnterMarker(t,i);break;case events2.ObjectLeaveEvent.type:this.viewer.setCursor(null),this.__onLeaveMarker(i);break;case events2.ObjectHoverEvent.type:this.__onHoverMarker(t,i)}}break;case"mouseenter":this.__onEnterMarker(e,this.__getTargetMarker(e.target));break;case"mouseleave":this.__onLeaveMarker(this.__getTargetMarker(e.target));break;case"mousemove":this.__onHoverMarker(e,this.__getTargetMarker(e.target,!0));break;case"contextmenu":e.preventDefault()}}toggleAllMarkers(){this.state.visible?this.hideAllMarkers():this.showAllMarkers()}showAllMarkers(){this.state.visible=!0,this.renderMarkers(),this.dispatchEvent(new ShowMarkersEvent)}hideAllMarkers(){this.state.visible=!1,this.renderMarkers(),this.dispatchEvent(new HideMarkersEvent)}toggleAllTooltips(){this.state.showAllTooltips?this.hideAllTooltips():this.showAllTooltips()}showAllTooltips(){this.state.showAllTooltips=!0,Object.values(this.markers).forEach((e=>{e.state.staticTooltip=!0,e.showTooltip()}))}hideAllTooltips(){this.state.showAllTooltips=!1,Object.values(this.markers).forEach((e=>{e.state.staticTooltip=!1,e.hideTooltip()}))}getNbMarkers(){return Object.keys(this.markers).length}getMarkers(){return Object.values(this.markers)}addMarker(e,t=!0){if(this.markers[e.id])throw new PSVError6(`marker "${e.id}" already exists`);const i=new(getMarkerCtor(e))(this.viewer,this,e);i.isPoly()?this.svgContainer.appendChild(i.domElement):i.is3d()?this.viewer.renderer.addObject(i.threeElement):this.container.appendChild(i.domElement),this.markers[i.id]=i,this.state.showAllTooltips&&(i.state.staticTooltip=!0),t&&this.__afterChangerMarkers()}getMarker(e){const t="object"==typeof e?e.id:e;if(!this.markers[t])throw new PSVError6(`cannot find marker "${t}"`);return this.markers[t]}getCurrentMarker(){return this.state.currentMarker}updateMarker(e,t=!0){const i=this.getMarker(e.id);i.update(e),t&&(this.__afterChangerMarkers(),(i===this.state.hoveringMarker&&"hover"===i.config.tooltip?.trigger||i.state.staticTooltip)&&i.showTooltip())}removeMarker(e,t=!0){const i=this.getMarker(e);i.isPoly()?this.svgContainer.removeChild(i.domElement):i.is3d()?this.viewer.renderer.removeObject(i.threeElement):this.container.removeChild(i.domElement),this.state.hoveringMarker===i&&(this.state.hoveringMarker=null),this.state.currentMarker===i&&(this.state.currentMarker=null),i.destroy(),delete this.markers[i.id],t&&this.__afterChangerMarkers()}removeMarkers(e,t=!0){e.forEach((e=>this.removeMarker(e,!1))),t&&this.__afterChangerMarkers()}setMarkers(e,t=!0){this.clearMarkers(!1),e?.forEach((e=>{this.addMarker(e,!1)})),t&&this.__afterChangerMarkers()}clearMarkers(e=!0){Object.keys(this.markers).forEach((e=>{this.removeMarker(e,!1)})),e&&this.__afterChangerMarkers()}gotoMarker(e,t=this.config.gotoMarkerSpeed){const i=this.getMarker(e);return t?this.viewer.animate({...i.state.position,zoom:i.config.zoomLvl,speed:t}).then((()=>{this.dispatchEvent(new GotoMarkerDoneEvent(i))})):(this.viewer.rotate(i.state.position),utils10.isNil(i.config.zoomLvl)||this.viewer.zoom(i.config.zoomLvl),this.dispatchEvent(new GotoMarkerDoneEvent(i)),Promise.resolve())}hideMarker(e){this.toggleMarker(e,!1)}showMarker(e){this.toggleMarker(e,!0)}showMarkerTooltip(e){const t=this.getMarker(e);t.state.staticTooltip=!0,t.showTooltip()}hideMarkerTooltip(e){const t=this.getMarker(e);t.state.staticTooltip=!1,t.hideTooltip()}toggleMarker(e,t){const i=this.getMarker(e);i.config.visible=utils10.isNil(t)?!i.config.visible:t,this.renderMarkers()}showMarkerPanel(e){const t=this.getMarker(e);t.config.content?this.viewer.panel.show({id:ID_PANEL_MARKER,content:t.config.content}):this.hideMarkerPanel()}hideMarkerPanel(){this.viewer.panel.hide(ID_PANEL_MARKER)}toggleMarkersList(){this.viewer.panel.isVisible(ID_PANEL_MARKERS_LIST)?this.hideMarkersList():this.showMarkersList()}showMarkersList(){let e=[];this.state.visible&&Object.values(this.markers).forEach((t=>{t.config.visible&&!t.config.hideList&&e.push(t)}));const t=new RenderMarkersListEvent(e);this.dispatchEvent(t),e=t.markers,this.viewer.panel.show({id:ID_PANEL_MARKERS_LIST,content:MARKERS_LIST_TEMPLATE(e,this.viewer.config.lang[MarkersButton.id]),noMargin:!0,clickHandler:e=>{const t=utils10.getClosest(e,"li"),i=t?t.dataset[MARKER_DATA]:void 0;if(i){const e=this.getMarker(i);this.dispatchEvent(new SelectMarkerListEvent(e)),this.gotoMarker(e.id),this.hideMarkersList()}}})}hideMarkersList(){this.viewer.panel.hide(ID_PANEL_MARKERS_LIST)}renderMarkers(){if(this.state.needsReRender)return void(this.state.needsReRender=!1);const e=this.viewer.getZoomLevel(),t=this.viewer.getPosition(),i=this.state.hoveringMarker;Object.values(this.markers).forEach((s=>{let r=this.state.visible&&s.config.visible,o=!1,n=null;r&&(n=s.render({viewerPosition:t,zoomLevel:e,hoveringMarker:i}),r=!!n),o=s.state.visible!==r,s.state.visible=r,s.state.position2D=n,s.is3d()||utils10.toggleClass(s.domElement,"psv-marker--visible",r),r?s.state.staticTooltip?s.showTooltip():s!==this.state.hoveringMarker&&s.hideTooltip():s.hideTooltip(),o&&(this.dispatchEvent(new MarkerVisibilityEvent(s,r)),s.is3d()&&(this.state.needsReRender=!0))})),this.state.needsReRender&&this.viewer.needsUpdate()}__getTargetMarker(e,t=!1){if(e instanceof Node){const i=t?utils10.getClosest(e,".psv-marker"):e;return i?i[MARKER_DATA]:void 0}return Array.isArray(e)?e.map((e=>e.userData[MARKER_DATA])).filter((e=>!!e)).sort(((e,t)=>t.config.zIndex-e.config.zIndex))[0]:null}__onEnterMarker(e,t){t&&(this.state.hoveringMarker=t,this.dispatchEvent(new EnterMarkerEvent(t)),t instanceof AbstractStandardMarker&&t.applyScale({zoomLevel:this.viewer.getZoomLevel(),viewerPosition:this.viewer.getPosition(),mouseover:!0}),t.state.staticTooltip||"hover"!==t.config.tooltip?.trigger||t.showTooltip(e.clientX,e.clientY))}__onLeaveMarker(e){e&&(this.dispatchEvent(new LeaveMarkerEvent(e)),e instanceof AbstractStandardMarker&&e.applyScale({zoomLevel:this.viewer.getZoomLevel(),viewerPosition:this.viewer.getPosition(),mouseover:!1}),this.state.hoveringMarker=null,e.state.staticTooltip||"hover"!==e.config.tooltip?.trigger?e.state.staticTooltip&&e.showTooltip():e.hideTooltip())}__onHoverMarker(e,t){t&&(t.isPoly()||t.is3d())&&"hover"===t.config.tooltip?.trigger&&t.showTooltip(e.clientX,e.clientY)}__onClick(e,t){const i=this.__getTargetMarker(e.data.objects),s=this.__getTargetMarker(e.data.target,!0)||i;this.state.currentMarker&&this.state.currentMarker!==s&&(this.dispatchEvent(new UnselectMarkerEvent(this.state.currentMarker)),this.viewer.panel.hide(ID_PANEL_MARKER),this.state.showAllTooltips||"click"!==this.state.currentMarker.config.tooltip?.trigger||this.hideMarkerTooltip(this.state.currentMarker.id),this.state.currentMarker=null),s&&(this.state.currentMarker=s,this.dispatchEvent(new SelectMarkerEvent(s,t,e.data.rightclick)),this.config.clickEventOnMarker?e.data.marker=s:e.stopImmediatePropagation(),this.markers[s.id]&&("click"===s.config.tooltip?.trigger?s.tooltip?this.hideMarkerTooltip(s.id):this.showMarkerTooltip(s.id):this.showMarkerPanel(s.id)))}__afterChangerMarkers(){this.__refreshUi(),this.__checkObjectsObserver(),this.viewer.needsUpdate(),this.dispatchEvent(new SetMarkersEvent(this.getMarkers()))}__refreshUi(){const e=Object.values(this.markers).filter((e=>!e.config.hideList)).length;0===e?(this.viewer.panel.isVisible(ID_PANEL_MARKERS_LIST)||this.viewer.panel.isVisible(ID_PANEL_MARKER))&&this.viewer.panel.hide():this.viewer.panel.isVisible(ID_PANEL_MARKERS_LIST)?this.showMarkersList():this.viewer.panel.isVisible(ID_PANEL_MARKER)&&(this.state.currentMarker?this.showMarkerPanel(this.state.currentMarker.id):this.viewer.panel.hide()),this.viewer.navbar.getButton(MarkersButton.id,!1)?.toggle(e>0),this.viewer.navbar.getButton(MarkersListButton.id,!1)?.toggle(e>0)}__checkObjectsObserver(){Object.values(this.markers).some((e=>e.is3d()))?this.viewer.observeObjects(MARKER_DATA):this.viewer.unobserveObjects(MARKER_DATA)}};MarkersPlugin.id="markers",MarkersPlugin.VERSION="5.7.2",MarkersPlugin.configParser=getConfig,MarkersPlugin.readonlyOptions=["markers"],DEFAULTS.lang[MarkersButton.id]="Markers",DEFAULTS.lang[MarkersListButton.id]="Markers list",registerButton(MarkersButton,"caption:left"),registerButton(MarkersListButton,"caption:left");export{MarkersPlugin,events_exports as events};
//# sourceMappingURL=/sm/0d350e0e905bdc08459c2acf1e92577b0f0ebb69bc9382dec31d772b6519b901.map